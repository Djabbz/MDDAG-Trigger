#############################################################################
# Makefile for building: librltoolbox.so.1.0.0
# Generated by qmake (1.07a) (Qt 3.3.4) on: Fri Nov 17 10:08:07 2006
# Project:  sources.pro
# Template: lib
# Command: $(QMAKE) -o Makefile sources.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -g -pipe -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -m32 -march=i386 -mtune=pentium4 -fasynchronous-unwind-tables -fPIC  -DUSE_DOUBLE
CXXFLAGS = -pipe -Wall -W -O2 -g -pipe -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -m32 -march=i386 -mtune=pentium4 -fasynchronous-unwind-tables -malign-double -fPIC  -DUSE_DOUBLE
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib/qt-3.3/mkspecs/default -I. -I../../../external_include/torch3 -I../../../external_libs/newmat11 -I../include
LINK     = g++
LFLAGS   = -shared -Wl,-soname,librltoolbox.so.1
LIBS     = $(SUBLIBS)  -ltorch -L/home/mammoth/gerhard/svn_projects/robotics/external_libs/torch3/lib/Linux_OPT_DOUBLE -lnewmat -L/home/mammoth/gerhard/svn_projects/robotics/external_libs/newmat11/lib
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = ../include/cacrobotmodel.h \
		../include/caction.h \
		../include/cactionstatistics.h \
		../include/cactorcritic.h \
		../include/cadaptivesoftmaxnetwork.h \
		../include/cadvantagelearning.h \
		../include/cagentcontroller.h \
		../include/cagent.h \
		../include/cagentlistener.h \
		../include/cagentlogger.h \
		../include/canalyzer.h \
		../include/ccartpolemodel.h \
		../include/ccontinuousactiongradientpolicy.h \
		../include/ccontinuousactions.h \
		../include/ccontinuoustime.h \
		../include/cdiscretizer.h \
		../include/cdynamicprogramming.h \
		../include/cenvironmentmodel.h \
		../include/cepisode.h \
		../include/cepisodehistory.h \
		../include/cerrorlistener.h \
		../include/cexploration.h \
		../include/cfeaturefunction.h \
		../include/cgradientfunction.h \
		../include/cgridworldmodel.h \
		../include/chierarchicbehaviours.h \
		../include/chierarchiccontroller.h \
		../include/chistory.h \
		../include/clearndataobject.h \
		../include/clinearfafeaturecalculator.h \
		../include/cmontecarlo.h \
		../include/cmultipolemodel.h \
		../include/cmyexception.h \
		../include/cparameters.h \
		../include/cpegasus.h \
		../include/cpendulummodel.h \
		../include/cpolicies.h \
		../include/cpolicygradient.h \
		../include/cprioritizedsweeping.h \
		../include/cqetraces.h \
		../include/cqfunction.h \
		../include/cqtconfig.h \
		../include/cregions.h \
		../include/creinforce.h \
		../include/cresiduals.h \
		../include/crewardfunction.h \
		../include/crewardmodel.h \
		../include/cstatecollection.h \
		../include/cstate.h \
		../include/cstatemodifier.h \
		../include/cstateproperties.h \
		../include/csupervisedlearner.h \
		../include/ctaxidomain.h \
		../include/ctdlearner.h \
		../include/ctdpolicylearner.h \
		../include/ctestsuit.h \
		../include/ctheoreticalmodel.h \
		../include/ctorchvfunction.h \
		../include/ctransitionfunction.h \
		../include/cutility.h \
		../include/cvaluepolicygradientlearner.h \
		../include/cvetraces.h \
		../include/cvfunctionfromqfunction.h \
		../include/cvfunction.h \
		../include/cvfunctionlearner.h \
		../include/ril_debug.h \
		../include/cbatchlearning.h \
		../include/clstd.h \
		../include/ctreevfunction.h \
		../include/cdatafactory.h \
		../include/cextratrees.h \
		../include/cforest.h \
		../include/cinputdata.h \
		../include/ctrees.h \
		../include/ctreebatchlearning.h \
		../include/crbftrees.h \
		../include/cnearestneighbor.h \
		../include/ckdtrees.h \
		../include/clocalregression.h \
		../include/cmodeltree.h \
		../include/csamplingbasedmodel.h \
		../include/cbaseobjects.h \
		../include/cevaluator.h
SOURCES = cacrobotmodel.cpp \
		caction.cpp \
		cactionstatistics.cpp \
		cactorcritic.cpp \
		cadaptivesoftmaxnetwork.cpp \
		cadvantagelearning.cpp \
		cagentcontroller.cpp \
		cagent.cpp \
		cagentlistener.cpp \
		cagentlogger.cpp \
		canalyzer.cpp \
		ccartpolemodel.cpp \
		ccontinuousactiongradientpolicy.cpp \
		ccontinuousactions.cpp \
		ccontinuoustime.cpp \
		cdiscretizer.cpp \
		cdynamicprogramming.cpp \
		cenvironmentmodel.cpp \
		cepisode.cpp \
		cepisodehistory.cpp \
		cerrorlistener.cpp \
		cexploration.cpp \
		cfeaturefunction.cpp \
		cgradientfunction.cpp \
		cgridworldmodel.cpp \
		chierarchicbehaviours.cpp \
		chierarchiccontroller.cpp \
		chistory.cpp \
		clearndataobject.cpp \
		clinearfafeaturecalculator.cpp \
		cmontecarlo.cpp \
		cmultipolemodel.cpp \
		cmyexception.cpp \
		cparameters.cpp \
		cpegasus.cpp \
		cpendulummodel.cpp \
		cpolicies.cpp \
		cpolicygradient.cpp \
		cprioritizedsweeping.cpp \
		cqetraces.cpp \
		cqfunction.cpp \
		cregions.cpp \
		creinforce.cpp \
		cresiduals.cpp \
		crewardfunction.cpp \
		crewardmodel.cpp \
		cstatecollection.cpp \
		cstate.cpp \
		cstatemodifier.cpp \
		cstateproperties.cpp \
		csupervisedlearner.cpp \
		ctaxidomain.cpp \
		ctdlearner.cpp \
		ctestsuit.cpp \
		ctheoreticalmodel.cpp \
		ctorchvfunction.cpp \
		ctransitionfunction.cpp \
		cutility.cpp \
		cvaluepolicygradientlearner.cpp \
		cvetraces.cpp \
		cvfunction.cpp \
		cvfunctionfromqfunction.cpp \
		cvfunctionlearner.cpp \
		ril_debug.cpp \
		cbatchlearning.cpp \
		clstd.cpp \
		cdatafactory.cpp \
		cextratrees.cpp \
		cforest.cpp \
		cinputdata.cpp \
		ctrees.cpp \
		ctreevfunction.cpp \
		ctreebatchlearning.cpp \
		crbftrees.cpp \
		cnearestneighbor.cpp \
		ckdtrees.cpp \
		clocalregression.cpp \
		cmodeltree.cpp \
		csamplingbasedmodel.cpp \
		cbaseobjects.cpp \
		cevaluator.cpp
OBJECTS = cacrobotmodel.o \
		caction.o \
		cactionstatistics.o \
		cactorcritic.o \
		cadaptivesoftmaxnetwork.o \
		cadvantagelearning.o \
		cagentcontroller.o \
		cagent.o \
		cagentlistener.o \
		cagentlogger.o \
		canalyzer.o \
		ccartpolemodel.o \
		ccontinuousactiongradientpolicy.o \
		ccontinuousactions.o \
		ccontinuoustime.o \
		cdiscretizer.o \
		cdynamicprogramming.o \
		cenvironmentmodel.o \
		cepisode.o \
		cepisodehistory.o \
		cerrorlistener.o \
		cexploration.o \
		cfeaturefunction.o \
		cgradientfunction.o \
		cgridworldmodel.o \
		chierarchicbehaviours.o \
		chierarchiccontroller.o \
		chistory.o \
		clearndataobject.o \
		clinearfafeaturecalculator.o \
		cmontecarlo.o \
		cmultipolemodel.o \
		cmyexception.o \
		cparameters.o \
		cpegasus.o \
		cpendulummodel.o \
		cpolicies.o \
		cpolicygradient.o \
		cprioritizedsweeping.o \
		cqetraces.o \
		cqfunction.o \
		cregions.o \
		creinforce.o \
		cresiduals.o \
		crewardfunction.o \
		crewardmodel.o \
		cstatecollection.o \
		cstate.o \
		cstatemodifier.o \
		cstateproperties.o \
		csupervisedlearner.o \
		ctaxidomain.o \
		ctdlearner.o \
		ctestsuit.o \
		ctheoreticalmodel.o \
		ctorchvfunction.o \
		ctransitionfunction.o \
		cutility.o \
		cvaluepolicygradientlearner.o \
		cvetraces.o \
		cvfunction.o \
		cvfunctionfromqfunction.o \
		cvfunctionlearner.o \
		ril_debug.o \
		cbatchlearning.o \
		clstd.o \
		cdatafactory.o \
		cextratrees.o \
		cforest.o \
		cinputdata.o \
		ctrees.o \
		ctreevfunction.o \
		ctreebatchlearning.o \
		crbftrees.o \
		cnearestneighbor.o \
		ckdtrees.o \
		clocalregression.o \
		cmodeltree.o \
		csamplingbasedmodel.o \
		cbaseobjects.o \
		cevaluator.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = sources.pro
QMAKE_TARGET = rltoolbox
DESTDIR  = ../lib/
TARGET   = librltoolbox.so.1.0.0
TARGETA	= ../lib/librltoolbox.a
TARGETD	= librltoolbox.so.1.0.0
TARGET0	= librltoolbox.so
TARGET1	= librltoolbox.so.1
TARGET2	= librltoolbox.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile  ../lib/$(TARGET)

../lib/$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(SUBLIBS) $(OBJCOMP)  depend
	test -d ../lib/ || mkdir -p ../lib/
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	-$(DEL_FILE) ../lib/$(TARGET)
	-$(DEL_FILE) ../lib/$(TARGET0)
	-$(DEL_FILE) ../lib/$(TARGET1)
	-$(DEL_FILE) ../lib/$(TARGET2)
	-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) ../lib/



staticlib: $(TARGETA)

$(TARGETA):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP)depend
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS) $(OBJMOC)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: sources.pro  /usr/lib/qt-3.3/mkspecs/default/qmake.conf 
	$(QMAKE) -o Makefile sources.pro
qmake: 
	@$(QMAKE) -o Makefile sources.pro

dist: 
	@mkdir -p .tmp/rltoolbox && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/rltoolbox/ && ( cd `dirname .tmp/rltoolbox` && $(TAR) rltoolbox.tar rltoolbox && $(GZIP) rltoolbox.tar ) && $(MOVE) `dirname .tmp/rltoolbox`/rltoolbox.tar.gz . && $(DEL_FILE) -r .tmp/rltoolbox

mocclean:
uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../lib/$(TARGET) $(TARGET)
	-$(DEL_FILE) ../lib/$(TARGET0) ../lib/$(TARGET1) ../lib/$(TARGET2) $(TARGETA)


depend:
	makedepend $(INCPATH) $(SOURCES)

FORCE:

####### Compile

cacrobotmodel.o: cacrobotmodel.cpp 

caction.o: caction.cpp 

cactionstatistics.o: cactionstatistics.cpp 

cactorcritic.o: cactorcritic.cpp 

cadaptivesoftmaxnetwork.o: cadaptivesoftmaxnetwork.cpp 

cadvantagelearning.o: cadvantagelearning.cpp 

cagentcontroller.o: cagentcontroller.cpp 

cagent.o: cagent.cpp 

cagentlistener.o: cagentlistener.cpp 

cagentlogger.o: cagentlogger.cpp 

canalyzer.o: canalyzer.cpp 

ccartpolemodel.o: ccartpolemodel.cpp 

ccontinuousactiongradientpolicy.o: ccontinuousactiongradientpolicy.cpp 

ccontinuousactions.o: ccontinuousactions.cpp 

ccontinuoustime.o: ccontinuoustime.cpp 

cdiscretizer.o: cdiscretizer.cpp 

cdynamicprogramming.o: cdynamicprogramming.cpp 

cenvironmentmodel.o: cenvironmentmodel.cpp 

cepisode.o: cepisode.cpp 

cepisodehistory.o: cepisodehistory.cpp 

cerrorlistener.o: cerrorlistener.cpp 

cexploration.o: cexploration.cpp 

cfeaturefunction.o: cfeaturefunction.cpp 

cgradientfunction.o: cgradientfunction.cpp 

cgridworldmodel.o: cgridworldmodel.cpp 

chierarchicbehaviours.o: chierarchicbehaviours.cpp 

chierarchiccontroller.o: chierarchiccontroller.cpp 

chistory.o: chistory.cpp 

clearndataobject.o: clearndataobject.cpp 

clinearfafeaturecalculator.o: clinearfafeaturecalculator.cpp 

cmontecarlo.o: cmontecarlo.cpp 

cmultipolemodel.o: cmultipolemodel.cpp 

cmyexception.o: cmyexception.cpp 

cparameters.o: cparameters.cpp 

cpegasus.o: cpegasus.cpp 

cpendulummodel.o: cpendulummodel.cpp 

cpolicies.o: cpolicies.cpp 

cpolicygradient.o: cpolicygradient.cpp 

cprioritizedsweeping.o: cprioritizedsweeping.cpp 

cqetraces.o: cqetraces.cpp 

cqfunction.o: cqfunction.cpp 

cregions.o: cregions.cpp 

creinforce.o: creinforce.cpp 

cresiduals.o: cresiduals.cpp 

crewardfunction.o: crewardfunction.cpp 

crewardmodel.o: crewardmodel.cpp 

cstatecollection.o: cstatecollection.cpp 

cstate.o: cstate.cpp 

cstatemodifier.o: cstatemodifier.cpp 

cstateproperties.o: cstateproperties.cpp 

csupervisedlearner.o: csupervisedlearner.cpp 

ctaxidomain.o: ctaxidomain.cpp 

ctdlearner.o: ctdlearner.cpp 

ctestsuit.o: ctestsuit.cpp 

ctheoreticalmodel.o: ctheoreticalmodel.cpp 

ctorchvfunction.o: ctorchvfunction.cpp 

ctransitionfunction.o: ctransitionfunction.cpp 

cutility.o: cutility.cpp 

cvaluepolicygradientlearner.o: cvaluepolicygradientlearner.cpp 

cvetraces.o: cvetraces.cpp 

cvfunction.o: cvfunction.cpp 

cvfunctionfromqfunction.o: cvfunctionfromqfunction.cpp 

cvfunctionlearner.o: cvfunctionlearner.cpp 

ril_debug.o: ril_debug.cpp 

cbatchlearning.o: cbatchlearning.cpp 

clstd.o: clstd.cpp 

cdatafactory.o: cdatafactory.cpp 

cextratrees.o: cextratrees.cpp 

cforest.o: cforest.cpp 

cinputdata.o: cinputdata.cpp 

ctrees.o: ctrees.cpp 

ctreevfunction.o: ctreevfunction.cpp 

ctreebatchlearning.o: ctreebatchlearning.cpp 

crbftrees.o: crbftrees.cpp 

cnearestneighbor.o: cnearestneighbor.cpp 

ckdtrees.o: ckdtrees.cpp 

clocalregression.o: clocalregression.cpp 

cmodeltree.o: cmodeltree.cpp 

csamplingbasedmodel.o: csamplingbasedmodel.cpp 

cbaseobjects.o: cbaseobjects.cpp 

cevaluator.o: cevaluator.cpp 

####### Install

install:  

uninstall:  

